10. Regular Expression Matching
Hard
Topics
premium lock icon
Companies
Given an input string s and a pattern p, implement regular expression matching with support for '.' and '*' where:

'.' Matches any single character.​​​​
'*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).

 

Example 1:

Input: s = "aa", p = "a"
Output: false
Explanation: "a" does not match the entire string "aa".
Example 2:

Input: s = "aa", p = "a*"
Output: true
Explanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes "aa".
Example 3:

Input: s = "ab", p = ".*"
Output: true
Explanation: ".*" means "zero or more (*) of any character (.)".
 

Constraints:

1 <= s.length <= 20
1 <= p.length <= 20
s contains only lowercase English letters.
p contains only lowercase English letters, '.', and '*'.
It is guaranteed for each appearance of the character '*', there will be a previous valid character to match.


sol1:
/**
 * @param {string} s
 * @param {string} p
 * @return {boolean}
 */
var isMatch = function (s, p) {
  const sarray = s.split("");
  const parray = p.split("");
  // console.log(sarray, parray, sarray.length, parray.length);
  // if (sarray.length != parray.length) return console.log(false);
  for (i = 0; i < parray.length; i++) {
    if (parray[i] == "." && parray[i + 1] == "*") {
      //console.log("22", parray[i]);
      parray[i] = sarray[i];
      parray[i + 1] = sarray[i + 1];
      // console.log("25", parray[i], parray[i + 1]);
    } else if (parray[i] == ".") {
      // console.log("14", parray[i]);
      parray[i] = sarray[i];
      // console.log("16", parray[i]);
    } else if (parray[i] == "*") {
      //  console.log("18", parray[i]);
      parray[i] = parray[i - 1];
      //  console.log("20", parray[i], parray[i - 1]);
    }

    // if (sarray[i] != parray[i]) {
    //   //  console.log("27", i, i, sarray[i], parray[i]);
    //   console.log(false);
    //   //return false;
    // }
  }
  console.log(sarray, parray, parray.join("").includes(sarray.join("")));
  // console.log(true);
  return parray.join("").includes(sarray.join(""));
};
//isMatch("aa", "a");
//isMatch("aab", "c*a*b");
//isMatch("aa", "a*");
//isMatch("ab", ".*");
//isMatch("aa", "**");
isMatch("ab", ".*c");
