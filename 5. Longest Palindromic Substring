5. Longest Palindromic Substring
Attempted
Medium
Topics
premium lock icon
Companies
Hint
Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.



sol1:
/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function (s) {
  let maxLength = 0;
  let result = "";

  for (let i = 0; i < s.length; i++) {
    for (let j = i; j < s.length; j++) {
      let substr = s.substring(i, j + 1);
      if (isPalindrome(substr) && substr.length > maxLength) {
        result = substr;
        maxLength = substr.length;
      }
    }
  }

  return result;
};

function isPalindrome(str) {
  let left = 0;
  let right = str.length - 1;
  while (left < right) {
    if (str[left] !== str[right]) return false;
    left++;
    right--;
  }
  return true;
}
longestPalindrome("babad");
longestPalindrome("cbbd");
longestPalindrome("bad");
longestPalindrome("ac");
longestPalindrome("a");
longestPalindrome("ccc");


////
sol2:
var longestPalindrome = function (s) {
  if (s.length < 2) return s;

  let start = 0;
  let maxLength = 1;

  for (let i = 0; i < s.length; i++) {
    expandAroundCenter(i, i);     // Odd-length palindrome
    expandAroundCenter(i, i + 1); // Even-length palindrome
  }

  function expandAroundCenter(left, right) {
    while (left >= 0 && right < s.length && s[left] === s[right]) {
      if (right - left + 1 > maxLength) {
        start = left;
        maxLength = right - left + 1;
      }
      left--;
      right++;
    }
  }

  return s.substring(start, start + maxLength);
};