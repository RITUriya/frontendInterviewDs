##https://seanprashad.com/leetcode-patterns/
##https://leetcode.com/problems/find-smallest-letter-greater-than-target/description/ 

744. Find Smallest Letter Greater Than Target   ===== Easy

You are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different characters in letters.

Return the smallest character in letters that is lexicographically greater than target. If such a character does not exist, return the first character in letters.

 

Example 1:

Input: letters = ["c","f","j"], target = "a"
Output: "c"
Explanation: The smallest character that is lexicographically greater than 'a' in letters is 'c'.
Example 2:

Input: letters = ["c","f","j"], target = "c"
Output: "f"
Explanation: The smallest character that is lexicographically greater than 'c' in letters is 'f'.
Example 3:

Input: letters = ["x","x","y","y"], target = "z"
Output: "x"
Explanation: There are no characters in letters that is lexicographically greater than 'z' so we return letters[0].
 


/**
 * @param {character[]} letters
 * @param {character} target
 * @return {character}
 */
var nextGreatestLetter = function (letters, target) {
    // let low = 0;
    // let high = letters.length - 1;
    // while (high >= low) {
    //     let mid = low + Math.floor((high - low) / 2);
    //     if (letters[mid] == target) return letters[mid + 1];
    //     if (letters[mid] > target) high = mid - 1; else low = mid + 1;
    // }
    // return letters[0];

    
    for(let i=0; i<letters.length; i++){
            if(letters[i] > target) 
                return letters[i];
            else
                continue;    
        }
        return letters[0];
};
