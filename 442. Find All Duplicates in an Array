// ##https://seanprashad.com/leetcode-patterns/
// ##https://leetcode.com/problems/find-all-duplicates-in-an-array/description/



442. Find All Duplicates in an Array ====Medium
// Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears at most twice, return an array of all the integers that appears twice.

// You must write an algorithm that runs in O(n) time and uses only constant auxiliary space, excluding the space needed to store the output

// Example 1:

// Input: nums = [4,3,2,7,8,2,3,1]
// Output: [2,3]
// Example 2:

// Input: nums = [1,1,2]
// Output: [1]
// Example 3:

// Input: nums = [1]
// Output: []

//sol1:
/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDuplicates = function (nums) {
  const newArray = [];
  if (nums.length == 1) return [];
  for (i = 0; i < nums.length; i++) {
    const index = Math.abs(nums[i]) - 1;
    if (nums[index] < 0) {
      newArray.push(Math.abs(nums[i]));
    } else {
      nums[index] = -nums[index];
    }
  }
  return newArray;
};

findDuplicates([4, 3, 2, 7, 8, 2, 3, 1]);

//sol2:
/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDuplicates = function (nums) {
  if (nums.length == 1) return [];

  nums = nums.sort((a, b) => a - b);
  const newArray = [];
  for (let i = 0; i < nums.length; i++) {
    if (nums[i - 1] != nums[i] && nums[i] == nums[i + 1]) {
      newArray.push(nums[i]);
    }
  }
  return newArray;
};
